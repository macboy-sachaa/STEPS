create or replace PROCEDURE USP_GET_CONFIGURATIONS (vVERSION INTEGER) AS
vSTART_DATE DATE;
vEND_DATE DATE;
vC_VERSION NVARCHAR2(30);
BEGIN

SELECT V_STARTDATE INTO vSTART_DATE
FROM SYS_VERSIONS
WHERE ROW_ID = vVERSION;

SELECT V_ENDDATE INTO vEND_DATE
FROM SYS_VERSIONS
WHERE ROW_ID = vVERSION;

SELECT TRIM(C_VERSION) INTO vC_VERSION
FROM SYS_VERSIONS
WHERE ROW_ID = vVERSION;



----------------------------Initialize Log Table----------
BEGIN
   USP_IN_VERSION_STATUS (vC_VERSION);
END;

----------Load TEMP_DATA_FC_HAZMAT_VOL
BEGIN
   USP_UP_VERSION_STATUS (vC_VERSION,'SYS_FC_HAZMAT_VOL','Query Running');
END;
BEGIN
  USP_SYS_FC_HAZMAT_VOLUME (vSTART_DATE,vEND_DATE);
END;
BEGIN
   USP_UP_VERSION_STATUS (vC_VERSION,'SYS_FC_HAZMAT_VOL','Staging Created');
END;

----------Load TEMP_SYS_FC_STN_TRANSIT_TIME
BEGIN
   USP_UP_VERSION_STATUS (vC_VERSION,'SYS_FC_STN_TRANSIT_TIMES','Query Running');
END;
BEGIN
  USP_SYS_FC_STN_TRANSIT_TIMES (vSTART_DATE,vEND_DATE);
END;
BEGIN
   USP_UP_VERSION_STATUS (vC_VERSION,'SYS_FC_STN_TRANSIT_TIMES','Staging Created');
END;


----------Load TEMP_FC_ZIPCODE_CONTRIBUTION
BEGIN
   USP_UP_VERSION_STATUS (vC_VERSION,'SYS_FC_ZIP_CONTRIBUTION','Query Running');
END;
BEGIN
  USP_SYS_FC_ZIP_CONTRIBUTION (vSTART_DATE,vEND_DATE);
END;
BEGIN
   USP_UP_VERSION_STATUS (vC_VERSION,'SYS_FC_ZIP_CONTRIBUTION','Staging Created');
END;

----------Load TEMP_SYS_MFN_CONTRIB
BEGIN
   USP_UP_VERSION_STATUS (vC_VERSION,'SYS_MFN_ZIP_CONTRIBUTION','Query Running');
END;
--BEGIN
--  USP_SYS_MFN_CONTRIBUTION (vSTART_DATE,vEND_DATE);
--END;
BEGIN
   USP_UP_VERSION_STATUS (vC_VERSION,'SYS_MFN_ZIP_CONTRIBUTION','Staging Created');
END;

----------Load TEMP_SYS_MFN_TRANSIT_TIME
BEGIN
   USP_UP_VERSION_STATUS (vC_VERSION,'SYS_MFN_ZIP_TRANSIT_TIMES','Query Running');
END;
BEGIN
  USP_SYS_MFN_TRANSIT_TIME (vSTART_DATE,vEND_DATE);
END;
BEGIN
   USP_UP_VERSION_STATUS (vC_VERSION,'SYS_MFN_ZIP_TRANSIT_TIMES','Staging Created');
END;

----------Load TEMP_SYS_STN_ZIP_MAPPING
BEGIN
   USP_UP_VERSION_STATUS (vC_VERSION,'SYS_STN_ZIP_MAPPING_ACT','Query Running');
END;
BEGIN
  USP_SYS_STN_ZIP_MAPPING (vSTART_DATE,vEND_DATE);
END;
BEGIN
   USP_UP_VERSION_STATUS (vC_VERSION,'SYS_STN_ZIP_MAPPING_ACT','Staging Created');
END;

----------Load TEMP_FC_PINCODE_TRANSIT_TIMES
BEGIN
   USP_UP_VERSION_STATUS (vC_VERSION,'SYS_FC_PINCODE_TRANSIT_TIME','Query Running');
END;
BEGIN
  USP_SYS_TRANSIT_TIMES (vSTART_DATE,vEND_DATE);
END;
BEGIN
   USP_UP_VERSION_STATUS (vC_VERSION,'SYS_FC_PINCODE_TRANSIT_TIME','Staging Created');
END;

----------Load TEMP_SYS_ZIPCODE_LS_MAPPING
BEGIN
   USP_UP_VERSION_STATUS (vC_VERSION,'SYS_ZIPCODE_LS_CONTRIBUTION','Query Running');
END;
BEGIN
  USP_SYS_ZIPCODE_LS_CONTRIB (vSTART_DATE,vEND_DATE);
END;
BEGIN
   USP_UP_VERSION_STATUS (vC_VERSION,'SYS_ZIPCODE_LS_CONTRIBUTION','Staging Created');
END;


----------Load TEMP_SYS_STATION_PERFORMANCE
BEGIN
   USP_UP_VERSION_STATUS (vC_VERSION,'SYS_STATION_PERFORMANCE','Query Running');
END;
BEGIN
  USP_SYS_STATION_PERFORMANCE (vSTART_DATE,vEND_DATE);
END;
BEGIN
   USP_UP_VERSION_STATUS (vC_VERSION,'SYS_STATION_PERFORMANCE','Staging Created');
END;

/*Added for Station Performance and MFN Contribution*/
--BEGIN
--  USP_SYS_STATION_ACTIVITY (vSTART_DATE,vEND_DATE);
--END;

COMMIT;

EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK;
    UPDATE LOG_VERSION_STATUS
    SET EXECUTION_STATUS = 'Failed',
      LAST_UPDATED = SYSDATE
    WHERE C_VERSION = vC_VERSION
    AND EXECUTION_STATUS in ('Loading Data','Query Running','Waiting');
    
    UPDATE SYS_CONFIG_RUN_QUEUE
    SET IS_ACTIVE = 2
    WHERE IS_ACTIVE = 1
    AND C_VERSION = vC_VERSION;
    COMMIT; 


END;