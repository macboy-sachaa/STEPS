create or replace PROCEDURE USP_MIDDLE_MILE_VOLUME (vMODEL_ID INTEGER)AS
vESMM NVARCHAR2(30);
vMFN NVARCHAR2(30);
vSTNINPT NVARCHAR2(30);
vMFNINPT NVARCHAR2(30);
vSTNZIP NVARCHAR2(30);
vTRANSIT NVARCHAR2(30);
BEGIN

SELECT C_VERSION INTO vESMM
FROM LOG_MODEL_CONFIG
WHERE MODEL_ID = vMODEL_ID
AND STEP_TYPE = 'CONFIGURATION_DATA'
AND STEP_CODE = 'ESMM ROUTES DATA';

SELECT C_VERSION INTO vMFN
FROM LOG_MODEL_CONFIG
WHERE MODEL_ID = vMODEL_ID
AND STEP_TYPE = 'CONFIGURATION_DATA'
AND STEP_CODE = 'ZIPCODE MFN CONTRIBUTION';

SELECT C_VERSION INTO vSTNINPT
FROM LOG_MODEL_CONFIG
WHERE MODEL_ID = vMODEL_ID
AND STEP_TYPE = 'USER_INPUT'
AND STEP_CODE = 'STATION CAPACITY & RETURNS';

SELECT C_VERSION INTO vMFNINPT
FROM LOG_MODEL_CONFIG
WHERE MODEL_ID = vMODEL_ID
AND STEP_TYPE = 'USER_INPUT'
AND STEP_CODE = 'MFN_PICKUP_INPUTS'; 

SELECT C_VERSION INTO vSTNZIP
FROM LOG_MODEL_CONFIG
WHERE MODEL_ID = vMODEL_ID
AND STEP_TYPE = 'CONFIGURATION_DATA'
AND STEP_CODE = 'STATION ZIPCODE MAPPING (LARGE/SMALL)';

SELECT C_VERSION INTO vTRANSIT
FROM LOG_MODEL_CONFIG
WHERE MODEL_ID = vMODEL_ID
AND STEP_TYPE = 'CONFIGURATION_DATA'
AND STEP_CODE = 'TRANSIT TIMES DATA';

EXECUTE IMMEDIATE 'TRUNCATE TABLE STG_MIDDLE_MILE DROP STORAGE'; --Truncate TABLE
COMMIT;

--EXECUTE IMMEDIATE 'TRUNCATE TABLE RPT_MIDDLE_MILE_VIEW DROP STORAGE'; --Truncate TABLE
--COMMIT;

DELETE FROM RPT_MIDDLE_MILE_VIEW
WHERE MODEL_ID = vMODEL_ID;
COMMIT;



INSERT INTO STG_MIDDLE_MILE
Select MODEL_ID,
       NODE,
       0 as ESMMID,
       TRUNC(SHIPOUT_DATE) AS SHIPOUT_DATE,
       SUM(STD_SHIPMENTS) as STD_SHIPMENTS,
       SUM(FTsame) as FTSAME_SHIPMENTS,
       SUM(FTnext) as FTNEXT_SHIPMENTS,
       SUM(FTexp) as FTEXP_SHIPMENTS
FROM(
Select STD.MODEL_ID AS MODEL_ID
      ,MM.NODE
      ,MM.ID AS ESMMID
      ,STD.SHIPOUT_DATE + (MM.TRANSIT_TIME/24) AS SHIPOUT_DATE
      ,SUM(STD.STD_SHIPMENTS) AS STD_SHIPMENTS
      ,0 as FTsame
      ,0 as FTnext
      ,0 as FTexp
from
(SELECT ID,NODE,AVG(TRANSIT_TIME) AS TRANSIT_TIME FROM
            (SELECT E.ID,NODE1 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.FC=T.WAREHOUSE_ID
                    AND E.NODE1 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
            UNION
            SELECT E.ID,NODE2 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE1=T.WAREHOUSE_ID
                    AND E.NODE2 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE3 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE2=T.WAREHOUSE_ID
                    AND E.NODE3 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE4 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE3=T.WAREHOUSE_ID
                    AND E.NODE4 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE5 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE4=T.WAREHOUSE_ID
                    AND E.NODE5 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE6 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE5=T.WAREHOUSE_ID
                    AND E.NODE6 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE7 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE6=T.WAREHOUSE_ID
                    AND E.NODE7 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE8 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE7=T.WAREHOUSE_ID
                    AND E.NODE8 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE9 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE8=T.WAREHOUSE_ID
                    AND E.NODE9 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE10 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE9=T.WAREHOUSE_ID
                    AND E.NODE10 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE11 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE10=T.WAREHOUSE_ID
                    AND E.NODE11 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM) A
            WHERE NODE IS NOT NULL 
            GROUP BY ID,NODE) MM
            left join STG_STATIONVOLUME STD
            on MM.ID=STD.MMLINKSTD
            GROUP BY STD.MODEL_ID,MM.ID,MM.NODE,STD.SHIPOUT_DATE + (MM.TRANSIT_TIME/24)
            UNION ALL
Select FTsame.MODEL_ID AS MODEL_ID
      ,MM.NODE
      ,MM.ID AS ESMMID
      ,FTsame.SHIPOUT_DATE + (MM.TRANSIT_TIME/24) AS SHIPOUT_DATE
      ,0 AS STD_SHIPMENTS
      ,SUM(FTsame.FT_SAME) as FTsame
      ,0 as FTnext
      ,0 as FTexp
from
(SELECT ID,NODE,AVG(TRANSIT_TIME) AS TRANSIT_TIME FROM
            (SELECT E.ID,NODE1 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.FC=T.WAREHOUSE_ID
                    AND E.NODE1 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
            UNION
            SELECT E.ID,NODE2 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE1=T.WAREHOUSE_ID
                    AND E.NODE2 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE3 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE2=T.WAREHOUSE_ID
                    AND E.NODE3 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE4 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE3=T.WAREHOUSE_ID
                    AND E.NODE4 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE5 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE4=T.WAREHOUSE_ID
                    AND E.NODE5 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE6 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE5=T.WAREHOUSE_ID
                    AND E.NODE6 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE7 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE6=T.WAREHOUSE_ID
                    AND E.NODE7 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE8 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE7=T.WAREHOUSE_ID
                    AND E.NODE8 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE9 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE8=T.WAREHOUSE_ID
                    AND E.NODE9 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE10 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE9=T.WAREHOUSE_ID
                    AND E.NODE10 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE11 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE10=T.WAREHOUSE_ID
                    AND E.NODE11 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM) A
            WHERE NODE IS NOT NULL 
            GROUP BY ID,NODE) MM
            left join STG_STATIONVOLUME FTsame
            on MM.ID=FTsame.MMLINKSAME
            GROUP BY FTsame.MODEL_ID,MM.ID,MM.NODE,FTsame.SHIPOUT_DATE + (MM.TRANSIT_TIME/24)
            UNION ALL
Select FTnext.MODEL_ID AS MODEL_ID
      ,MM.NODE
      ,MM.ID AS ESMMID
      ,FTnext.SHIPOUT_DATE + (MM.TRANSIT_TIME/24) AS SHIPOUT_DATE
      ,0 AS STD_SHIPMENTS
      ,0 as FTsame
      ,SUM(FTnext.FT_NEXT) as FTnext
      ,0 as FTexp
from
(SELECT ID,NODE,AVG(TRANSIT_TIME) AS TRANSIT_TIME FROM
            (SELECT E.ID,NODE1 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.FC=T.WAREHOUSE_ID
                    AND E.NODE1 = T.STATION
            UNION
            SELECT E.ID,NODE2 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE1=T.WAREHOUSE_ID
                    AND E.NODE2 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE3 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE2=T.WAREHOUSE_ID
                    AND E.NODE3 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE4 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE3=T.WAREHOUSE_ID
                    AND E.NODE4 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE5 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE4=T.WAREHOUSE_ID
                    AND E.NODE5 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE6 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE5=T.WAREHOUSE_ID
                    AND E.NODE6 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE7 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE6=T.WAREHOUSE_ID
                    AND E.NODE7 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE8 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE7=T.WAREHOUSE_ID
                    AND E.NODE8 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE9 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE8=T.WAREHOUSE_ID
                    AND E.NODE9 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE10 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE9=T.WAREHOUSE_ID
                    AND E.NODE10 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE11 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE10=T.WAREHOUSE_ID
                    AND E.NODE11 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM) A
            WHERE NODE IS NOT NULL 
            GROUP BY ID,NODE) MM
            left join STG_STATIONVOLUME FTnext
            on MM.ID=FTnext.MMLINKNEXT
            GROUP BY FTnext.MODEL_ID,MM.ID,MM.NODE,FTnext.SHIPOUT_DATE + (MM.TRANSIT_TIME/24)
            UNION ALL
Select FTexp.MODEL_ID AS MODEL_ID
      ,MM.NODE
      ,MM.ID AS ESMMID
      ,FTexp.SHIPOUT_DATE + (MM.TRANSIT_TIME/24) AS SHIPOUT_DATE
      ,0 AS STD_SHIPMENTS
      ,0 as FTsame
      ,0 as FTnext
      ,SUM(FTexp.FT_EXP) as FTexp
from
(SELECT ID,NODE,AVG(TRANSIT_TIME) AS TRANSIT_TIME FROM
            (SELECT E.ID,NODE1 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.FC=T.WAREHOUSE_ID
                    AND E.NODE1 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
            UNION
            SELECT E.ID,NODE2 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE1=T.WAREHOUSE_ID
                    AND E.NODE2 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE3 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE2=T.WAREHOUSE_ID
                    AND E.NODE3 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE4 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE3=T.WAREHOUSE_ID
                    AND E.NODE4 = T.STATION
             UNION
            SELECT E.ID,NODE5 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE4=T.WAREHOUSE_ID
                    AND E.NODE5 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE6 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE5=T.WAREHOUSE_ID
                    AND E.NODE6 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE7 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE6=T.WAREHOUSE_ID
                    AND E.NODE7 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE8 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE7=T.WAREHOUSE_ID
                    AND E.NODE8 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE9 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE8=T.WAREHOUSE_ID
                    AND E.NODE9 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE10 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE9=T.WAREHOUSE_ID
                    AND E.NODE10 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM
             UNION
            SELECT E.ID,NODE11 AS NODE,NVL(T.TRANSIT_TIME,0) AS TRANSIT_TIME FROM SYS_ESMM_ROUTES E
                    LEFT JOIN SYS_CONFIG_TRANSIT_TIMES T
                    ON E.NODE10=T.WAREHOUSE_ID
                    AND E.NODE11 = T.STATION
                    AND E.C_VERSION = T.C_VERSION
                    WHERE E.C_VERSION = vESMM) A
            WHERE NODE IS NOT NULL 
            GROUP BY ID,NODE) MM
            left join STG_STATIONVOLUME FTexp
            on MM.ID=FTexp.MMLINKEXP
            GROUP BY FTexp.MODEL_ID,MM.ID,MM.NODE,FTexp.SHIPOUT_DATE + (MM.TRANSIT_TIME/24)
            )A 
            WHERE NODE NOT IN (SELECT STATION FROM IN_STATION_BACKLOG_TARGET
            WHERE MODEL_ID = A.MODEL_ID)
            AND MODEL_ID IS NOT NULL
            GROUP BY MODEL_ID,NODE,0,
       TRUNC(SHIPOUT_DATE);
       
  COMMIT;
  
  --------INSERT DATA FOR MFN AND C-RETURNS-----
INSERT INTO RPT_MIDDLE_MILE_VIEW
SELECT S.MODEL_ID,
       S.NODE,
       S.SHIPOUT_DATE,
       S.STD_SHIPMENTS,
       S.FTSAME_SHIPMENTS,
       S.FTNEXT_SHIPMENTS,
       S.FTEXP_SHIPMENTS,
       ROUND(SUM(NVL(M.SHIPMENTS,0)),0) AS MFN_SHIPMENTS,
       ROUND(SUM(NVL(C.SHIPMENTS,0)),0) AS C_RETURNS
FROM (SELECT MODEL_ID,
             NODE,
             TRUNC(SHIPOUT_DATE) AS SHIPOUT_DATE,
             ROUND(SUM(STD_SHIPMENTS),0) AS STD_SHIPMENTS,
             ROUND(SUM(FTSAME_SHIPMENTS),0) AS FTSAME_SHIPMENTS,
             ROUND(SUM(FTNEXT_SHIPMENTS),0) AS FTNEXT_SHIPMENTS,
             ROUND(SUM(FTEXP_SHIPMENTS),0) AS FTEXP_SHIPMENTS
       FROM STG_MIDDLE_MILE
       GROUP BY MODEL_ID,
             NODE,
             TRUNC(SHIPOUT_DATE)) S
LEFT JOIN
(SELECT MFN.EAD,MM.NODE AS STATION,MM.ID AS ESMMID,SUM(SHIPMENTS) AS SHIPMENTS
FROM
(SELECT P.PICKUP_DATE,
       TRUNC(P.PICKUP_DATE+NVL(MFN_CONFIG,0)) AS EAD,
       P.STATION AS WAREHOUSE_ID,
       B.STATION,
       AVG(A.FACTOR)*SUM(STD_SHIPOUT) AS SHIPMENTS
FROM
IN_MFN_PICKUPS_INPUTS P
LEFT JOIN
(SELECT WAREHOUSE_ID,
       ZIPCODE,
       FACTOR/SUM(FACTOR) OVER (PARTITION BY WAREHOUSE_ID) AS FACTOR
FROM       
(SELECT WAREHOUSE_ID,ZIPCODE,SUM(STD_CONTRIBUTION) AS FACTOR 
FROM SYS_MFN_ZIP_CONTRIBUTION
WHERE DEMANDTYPE='MFN' AND WAREHOUSE_ID <> '3P' AND C_VERSION = vMFN
GROUP BY WAREHOUSE_ID,ZIPCODE)) A
ON P.STATION = A.WAREHOUSE_ID
LEFT JOIN 
(SELECT WAREHOUSE_ID AS STATION,ZIPCODE
FROM
(SELECT WAREHOUSE_ID,
        ZIPCODE,
        ROW_NUMBER() OVER(PARTITION BY ZIPCODE ORDER BY WAREHOUSE_ID) AS CT
FROM SYS_STN_ZIP_MAPPING
WHERE C_VERSION = vSTNZIP )) B 
ON A.ZIPCODE=B.ZIPCODE
LEFT JOIN SYS_MFN_ZIP_TRANSIT_TIMES T
ON P.STATION = T.WAREHOUSE_ID
AND A.ZIPCODE = T.ZIPCODE
AND T.C_VERSION = vTRANSIT
--AND 
WHERE P.MODEL_ID = CAST(vMFNINPT AS INTEGER)
GROUP BY P.PICKUP_DATE,
       TRUNC(P.PICKUP_DATE+NVL(MFN_CONFIG,0)),
       P.STATION,
       B.STATION
HAVING SUM(A.FACTOR)*SUM(STD_SHIPOUT)>0) MFN
LEFT JOIN
(SELECT ID,FC,STATION
FROM(
      Select * from
          (Select ID,FC,
       --SHIPMETHOD,
       CASE WHEN SHIPMETHOD11 IS NOT NULL THEN NODE11
            WHEN SHIPMETHOD10 IS NOT NULL THEN NODE10
            WHEN SHIPMETHOD9 IS NOT NULL THEN NODE9
            WHEN SHIPMETHOD8 IS NOT NULL THEN NODE8
            WHEN SHIPMETHOD7 IS NOT NULL THEN NODE7
            WHEN SHIPMETHOD6 IS NOT NULL THEN NODE6
            WHEN SHIPMETHOD5 IS NOT NULL THEN NODE5
            WHEN SHIPMETHOD4 IS NOT NULL THEN NODE4
            WHEN SHIPMETHOD3 IS NOT NULL THEN NODE3
            WHEN SHIPMETHOD2 IS NOT NULL THEN NODE2
            WHEN SHIPMETHOD1 IS NOT NULL THEN NODE1
            ELSE 'Not Configured' END AS STATION  
            ,Row_number() over (partition by FC,
       --SHIPMETHOD,
       CASE WHEN SHIPMETHOD11 IS NOT NULL THEN NODE11
            WHEN SHIPMETHOD10 IS NOT NULL THEN NODE10
            WHEN SHIPMETHOD9 IS NOT NULL THEN NODE9
            WHEN SHIPMETHOD8 IS NOT NULL THEN NODE8
            WHEN SHIPMETHOD7 IS NOT NULL THEN NODE7
            WHEN SHIPMETHOD6 IS NOT NULL THEN NODE6
            WHEN SHIPMETHOD5 IS NOT NULL THEN NODE5
            WHEN SHIPMETHOD4 IS NOT NULL THEN NODE4
            WHEN SHIPMETHOD3 IS NOT NULL THEN NODE3
            WHEN SHIPMETHOD2 IS NOT NULL THEN NODE2
            WHEN SHIPMETHOD1 IS NOT NULL THEN NODE1
            ELSE 'Not Configured' END order by FC) as ct
      FROM SYS_ESMM_ROUTES
      WHERE ROUTEENABLED = 'Yes' AND C_VERSION = vESMM
      AND SHIPMETHOD IN ('ATS_MFN_STD')
      GROUP BY ID,FC,
       --SHIPMETHOD,
       CASE WHEN SHIPMETHOD11 IS NOT NULL THEN NODE11
            WHEN SHIPMETHOD10 IS NOT NULL THEN NODE10
            WHEN SHIPMETHOD9 IS NOT NULL THEN NODE9
            WHEN SHIPMETHOD8 IS NOT NULL THEN NODE8
            WHEN SHIPMETHOD7 IS NOT NULL THEN NODE7
            WHEN SHIPMETHOD6 IS NOT NULL THEN NODE6
            WHEN SHIPMETHOD5 IS NOT NULL THEN NODE5
            WHEN SHIPMETHOD4 IS NOT NULL THEN NODE4
            WHEN SHIPMETHOD3 IS NOT NULL THEN NODE3
            WHEN SHIPMETHOD2 IS NOT NULL THEN NODE2
            WHEN SHIPMETHOD1 IS NOT NULL THEN NODE1
            ELSE 'Not Configured' END) A
            where ct = 1)
            WHERE FC <> STATION) RR
            ON MFN.WAREHOUSE_ID=RR.FC
            AND MFN.STATION = RR.STATION
            LEFT JOIN (SELECT ID,NODE FROM
            (SELECT ID,NODE1 AS NODE FROM SYS_ESMM_ROUTES WHERE C_VERSION = vESMM
            UNION
            SELECT ID,NODE2 AS NODE FROM SYS_ESMM_ROUTES WHERE C_VERSION = vESMM
             UNION
            SELECT ID,NODE3 AS NODE FROM SYS_ESMM_ROUTES WHERE C_VERSION = vESMM
             UNION
            SELECT ID,NODE4 AS NODE FROM SYS_ESMM_ROUTES WHERE C_VERSION = vESMM
             UNION
            SELECT ID,NODE5 AS NODE FROM SYS_ESMM_ROUTES WHERE C_VERSION = vESMM
             UNION
            SELECT ID,NODE6 AS NODE FROM SYS_ESMM_ROUTES WHERE C_VERSION = vESMM
             UNION
            SELECT ID,NODE7 AS NODE FROM SYS_ESMM_ROUTES WHERE C_VERSION = vESMM
             UNION
            SELECT ID,NODE8 AS NODE FROM SYS_ESMM_ROUTES WHERE C_VERSION = vESMM
             UNION
            SELECT ID,NODE9 AS NODE FROM SYS_ESMM_ROUTES WHERE C_VERSION = vESMM
             UNION
            SELECT ID,NODE10 AS NODE FROM SYS_ESMM_ROUTES WHERE C_VERSION = vESMM
             UNION
            SELECT ID,NODE11 AS NODE FROM SYS_ESMM_ROUTES WHERE C_VERSION = vESMM) A
            WHERE NODE IS NOT NULL 
            GROUP BY ID,NODE) MM
            ON RR.ID=MM.ID
            GROUP BY MFN.EAD,MM.NODE,MM.ID) M
            ON S.SHIPOUT_DATE=M.EAD
            AND S.NODE = M.STATION
LEFT JOIN
(SELECT CRET.EAD,MM.NODE AS STATION,MM.ID AS ESMMID,SUM(SHIPMENTS) AS SHIPMENTS
FROM
(SELECT P.PICKUP_DATE,
       TRUNC(P.PICKUP_DATE+NVL(TT,0)) AS EAD,
       P.STATION AS STATION,
       A.WAREHOUSE_ID AS WAREHOUSE_ID,
       ROUND(AVG(A.FACTOR)*SUM(C_RETURNS_PICKUPS),0) AS SHIPMENTS
FROM
IN_STATION_INPUTS P
LEFT JOIN
(SELECT WAREHOUSE_ID,
       TT,
       STATION,
       FACTOR/SUM(FACTOR) OVER (PARTITION BY STATION,TT) AS FACTOR
FROM       
(SELECT WAREHOUSE_ID,CAST(AVG(EDD-SHIPOUT_DATE) AS INT) AS TT,STATION,SUM(STD_SHIPMENTS) AS FACTOR 
FROM STG_STATIONVOLUME
GROUP BY WAREHOUSE_ID,EDD-SHIPOUT_DATE,STATION
HAVING SUM(STD_SHIPMENTS)>1)) A
ON P.STATION = A.STATION
AND P.MODEL_ID = CAST(vSTNINPT AS INTEGER)
GROUP BY P.PICKUP_DATE,
       TRUNC(P.PICKUP_DATE+NVL(TT,0)),
       P.STATION,
       A.WAREHOUSE_ID
HAVING SUM(A.FACTOR)*SUM(C_RETURNS_PICKUPS)>0) CRET
LEFT JOIN
(SELECT ID,FC,STATION
FROM(
      Select * from
          (Select ID,FC,
       --SHIPMETHOD,
       CASE WHEN SHIPMETHOD11 IS NOT NULL THEN NODE11
            WHEN SHIPMETHOD10 IS NOT NULL THEN NODE10
            WHEN SHIPMETHOD9 IS NOT NULL THEN NODE9
            WHEN SHIPMETHOD8 IS NOT NULL THEN NODE8
            WHEN SHIPMETHOD7 IS NOT NULL THEN NODE7
            WHEN SHIPMETHOD6 IS NOT NULL THEN NODE6
            WHEN SHIPMETHOD5 IS NOT NULL THEN NODE5
            WHEN SHIPMETHOD4 IS NOT NULL THEN NODE4
            WHEN SHIPMETHOD3 IS NOT NULL THEN NODE3
            WHEN SHIPMETHOD2 IS NOT NULL THEN NODE2
            WHEN SHIPMETHOD1 IS NOT NULL THEN NODE1
            ELSE 'Not Configured' END AS STATION  
            ,Row_number() over (partition by FC,
       --SHIPMETHOD,
       CASE WHEN SHIPMETHOD11 IS NOT NULL THEN NODE11
            WHEN SHIPMETHOD10 IS NOT NULL THEN NODE10
            WHEN SHIPMETHOD9 IS NOT NULL THEN NODE9
            WHEN SHIPMETHOD8 IS NOT NULL THEN NODE8
            WHEN SHIPMETHOD7 IS NOT NULL THEN NODE7
            WHEN SHIPMETHOD6 IS NOT NULL THEN NODE6
            WHEN SHIPMETHOD5 IS NOT NULL THEN NODE5
            WHEN SHIPMETHOD4 IS NOT NULL THEN NODE4
            WHEN SHIPMETHOD3 IS NOT NULL THEN NODE3
            WHEN SHIPMETHOD2 IS NOT NULL THEN NODE2
            WHEN SHIPMETHOD1 IS NOT NULL THEN NODE1
            ELSE 'Not Configured' END order by FC) as ct
      FROM SYS_ESMM_ROUTES 
      WHERE ROUTEENABLED = 'Yes' AND C_VERSION = vESMM
      AND SHIPMETHOD IN ('ATS_INJ_STD')
      GROUP BY ID,FC,
       --SHIPMETHOD,
       CASE WHEN SHIPMETHOD11 IS NOT NULL THEN NODE11
            WHEN SHIPMETHOD10 IS NOT NULL THEN NODE10
            WHEN SHIPMETHOD9 IS NOT NULL THEN NODE9
            WHEN SHIPMETHOD8 IS NOT NULL THEN NODE8
            WHEN SHIPMETHOD7 IS NOT NULL THEN NODE7
            WHEN SHIPMETHOD6 IS NOT NULL THEN NODE6
            WHEN SHIPMETHOD5 IS NOT NULL THEN NODE5
            WHEN SHIPMETHOD4 IS NOT NULL THEN NODE4
            WHEN SHIPMETHOD3 IS NOT NULL THEN NODE3
            WHEN SHIPMETHOD2 IS NOT NULL THEN NODE2
            WHEN SHIPMETHOD1 IS NOT NULL THEN NODE1
            ELSE 'Not Configured' END) A
            where ct = 1)) RR
            ON CRET.WAREHOUSE_ID = RR.FC
            AND CRET.STATION = RR.STATION
                        LEFT JOIN (SELECT ID,NODE FROM
            (SELECT ID,NODE1 AS NODE FROM SYS_ESMM_ROUTES WHERE C_VERSION = vESMM
            UNION
            SELECT ID,NODE2 AS NODE FROM SYS_ESMM_ROUTES WHERE C_VERSION = vESMM
             UNION
            SELECT ID,NODE3 AS NODE FROM SYS_ESMM_ROUTES WHERE C_VERSION = vESMM
             UNION
            SELECT ID,NODE4 AS NODE FROM SYS_ESMM_ROUTES WHERE C_VERSION = vESMM
             UNION
            SELECT ID,NODE5 AS NODE FROM SYS_ESMM_ROUTES WHERE C_VERSION = vESMM
             UNION
            SELECT ID,NODE6 AS NODE FROM SYS_ESMM_ROUTES WHERE C_VERSION = vESMM
             UNION
            SELECT ID,NODE7 AS NODE FROM SYS_ESMM_ROUTES WHERE C_VERSION = vESMM
             UNION
            SELECT ID,NODE8 AS NODE FROM SYS_ESMM_ROUTES WHERE C_VERSION = vESMM
             UNION
            SELECT ID,NODE9 AS NODE FROM SYS_ESMM_ROUTES WHERE C_VERSION = vESMM
             UNION
            SELECT ID,NODE10 AS NODE FROM SYS_ESMM_ROUTES WHERE C_VERSION = vESMM
             UNION
            SELECT ID,NODE11 AS NODE FROM SYS_ESMM_ROUTES WHERE C_VERSION = vESMM) A
            WHERE NODE IS NOT NULL 
            GROUP BY ID,NODE) MM
            ON RR.ID=MM.ID
            GROUP BY CRET.EAD,MM.NODE,MM.ID) C
            ON S.SHIPOUT_DATE=C.EAD
            AND S.NODE = C.STATION
            GROUP BY S.MODEL_ID,
       S.NODE,
       S.SHIPOUT_DATE,
       S.STD_SHIPMENTS,
       S.FTSAME_SHIPMENTS,
       S.FTNEXT_SHIPMENTS,
       S.FTEXP_SHIPMENTS;
       
COMMIT;

END ;