create or replace procedure USP_IN_MODEL_CONFIG (model_id INTEGER)
AS
vROW_ID NUMBER(20,0);
vSTATUS NVARCHAR2(100);
vLINKEDMODEL INTEGER;
vIS_DONE INTEGER;
vCOUNTER INTEGER;
vVERSION NVARCHAR2(50);
vTYPE INTEGER;
vSYSCONFIG NVARCHAR2(50);
BEGIN

SELECT NVL(MAX(ROW_ID),0) INTO vROW_ID 
FROM LOG_MODEL_CONFIG;

SELECT DEFAULT_VERSION_TYPE INTO vTYPE
FROM IN_MODEL
WHERE ID = model_id;

-------Pull Most Recent General Bi-Weekly Configuration
SELECT C_VERSION INTO vVERSION
FROM SYS_VERSIONS
WHERE VERSION_TYPE_ID = vTYPE
AND V_ENDDATE = (SELECT MAX(V_ENDDATE) FROM SYS_VERSIONS WHERE VERSION_TYPE_ID = vTYPE)
AND ROWNUM<=1;

-------Pull Most recent ESMM Routes Data
SELECT C_VERSION INTO vSYSCONFIG
FROM SYS_VERSIONS
WHERE VERSION_TYPE_ID = 5
AND ROWNUM<=1; ------ Need to be edited later

vLINKEDMODEL := model_id;

vCOUNTER := vROW_ID;


---------------------------START-------------------------
vROW_ID := vROW_ID + 1;

SELECT CASE WHEN COUNT(*)>0 THEN 1 ELSE 0 END INTO vIS_DONE 
FROM IN_SNOP_FC_INPUTS
WHERE MODEL_ID = vLINKEDMODEL;

--insert fc_shipouts
INSERT INTO LOG_MODEL_CONFIG (ROW_ID,MODEL_ID,STEP_CODE,STEP_TYPE,CREATED_AT,UPDATED_AT,STATUS,LINKEDMODEL,RUN_ID,C_VERSION) VALUES
(vROW_ID,model_id,'FC_SHIPOUTS','USER_INPUT',SYSDATE,SYSDATE,CASE WHEN vIS_DONE > 0  THEN 'Completed' ELSE 'Data Required' END,vLINKEDMODEL,CONCAT(TO_CHAR(SYSDATE,'YYYYMMDDHHMMSS'),vROW_ID-vCOUNTER),model_id);

vROW_ID := vROW_ID + 1;

SELECT CASE WHEN COUNT(*)>0 THEN 1 ELSE 0 END INTO vIS_DONE 
FROM IN_MFN_PICKUPS_INPUTS
WHERE MODEL_ID = vLINKEDMODEL;

--insert mfn_pickups
INSERT INTO LOG_MODEL_CONFIG (ROW_ID,MODEL_ID,STEP_CODE,STEP_TYPE,CREATED_AT,UPDATED_AT,STATUS,LINKEDMODEL,RUN_ID,C_VERSION) VALUES
(vROW_ID,model_id,'MFN_PICKUP_INPUTS','USER_INPUT',SYSDATE,SYSDATE,CASE WHEN vIS_DONE > 0  THEN 'Completed' ELSE 'Data Required' END,vLINKEDMODEL,CONCAT(TO_CHAR(SYSDATE,'YYYYMMDDHHMMSS'),vROW_ID-vCOUNTER),model_id);

vROW_ID := vROW_ID + 1;

SELECT CASE WHEN COUNT(*)>0 THEN 1 ELSE 0 END INTO vIS_DONE 
FROM IN_STATION_BACKLOG_TARGET
WHERE MODEL_ID = vLINKEDMODEL;

--insert station_backlog_target
INSERT INTO LOG_MODEL_CONFIG (ROW_ID,MODEL_ID,STEP_CODE,STEP_TYPE,CREATED_AT,UPDATED_AT,STATUS,LINKEDMODEL,RUN_ID,C_VERSION) VALUES
(vROW_ID,model_id,'STATION_BACKLOG_TARGET','USER_INPUT',SYSDATE,SYSDATE,CASE WHEN vIS_DONE > 0  THEN 'Completed' ELSE 'Data Required' END,vLINKEDMODEL,CONCAT(TO_CHAR(SYSDATE,'YYYYMMDDHHMMSS'),vROW_ID-vCOUNTER),2);

vROW_ID := vROW_ID + 1;

SELECT CASE WHEN COUNT(*)>0 THEN 1 ELSE 0 END INTO vIS_DONE 
FROM IN_STATION_HOLIDAYS
WHERE MODEL_ID = vLINKEDMODEL;

--insert station holidays
INSERT INTO LOG_MODEL_CONFIG (ROW_ID,MODEL_ID,STEP_CODE,STEP_TYPE,CREATED_AT,UPDATED_AT,STATUS,LINKEDMODEL,RUN_ID,C_VERSION) VALUES
(vROW_ID,model_id,'STATION HOLIDAY LIST','USER_INPUT',SYSDATE,SYSDATE,CASE WHEN vIS_DONE > 0  THEN 'Completed' ELSE 'Data Required' END,vLINKEDMODEL,CONCAT(TO_CHAR(SYSDATE,'YYYYMMDDHHMMSS'),vROW_ID-vCOUNTER),model_id);

vROW_ID := vROW_ID + 1;

SELECT CASE WHEN COUNT(*)>0 THEN 1 ELSE 0 END INTO vIS_DONE 
FROM IN_STATION_INPUTS
WHERE MODEL_ID = vLINKEDMODEL;

--insert station inputs
INSERT INTO LOG_MODEL_CONFIG (ROW_ID,MODEL_ID,STEP_CODE,STEP_TYPE,CREATED_AT,UPDATED_AT,STATUS,LINKEDMODEL,RUN_ID,C_VERSION) VALUES
(vROW_ID,model_id,'STATION CAPACITY & RETURNS','USER_INPUT',SYSDATE,SYSDATE,CASE WHEN vIS_DONE > 0  THEN 'Completed' ELSE 'Data Required' END,vLINKEDMODEL,CONCAT(TO_CHAR(SYSDATE,'YYYYMMDDHHMMSS'),vROW_ID-vCOUNTER),model_id);

vROW_ID := vROW_ID + 1;

vIS_DONE:= 1;---DEFAULT FOR FUTURE USE


--insert FC_ZIP_CONTRIBUTION
INSERT INTO LOG_MODEL_CONFIG (ROW_ID,MODEL_ID,STEP_CODE,STEP_TYPE,CREATED_AT,UPDATED_AT,STATUS,LINKEDMODEL,RUN_ID,C_VERSION) VALUES
(vROW_ID,model_id,'FC ZIPCODE CONTRIBUTION','CONFIGURATION_DATA',SYSDATE,SYSDATE,'Completed',vLINKEDMODEL,CONCAT(TO_CHAR(SYSDATE,'YYYYMMDDHHMMSS'),vROW_ID-vCOUNTER),vVERSION);

vROW_ID := vROW_ID + 1;

--insert FC_HAZMAT VOL
INSERT INTO LOG_MODEL_CONFIG (ROW_ID,MODEL_ID,STEP_CODE,STEP_TYPE,CREATED_AT,UPDATED_AT,STATUS,LINKEDMODEL,RUN_ID,C_VERSION) VALUES
(vROW_ID,model_id,'FC HAZMAT CONTRIBUTION','CONFIGURATION_DATA',SYSDATE,SYSDATE,'Completed',vLINKEDMODEL,CONCAT(TO_CHAR(SYSDATE,'YYYYMMDDHHMMSS'),vROW_ID-vCOUNTER),vVERSION);

vROW_ID := vROW_ID + 1;

--insert TRANSIT_TIMES
INSERT INTO LOG_MODEL_CONFIG (ROW_ID,MODEL_ID,STEP_CODE,STEP_TYPE,CREATED_AT,UPDATED_AT,STATUS,LINKEDMODEL,RUN_ID,C_VERSION) VALUES
(vROW_ID,model_id,'TRANSIT TIMES DATA','CONFIGURATION_DATA',SYSDATE,SYSDATE,'Completed',vLINKEDMODEL,CONCAT(TO_CHAR(SYSDATE,'YYYYMMDDHHMMSS'),vROW_ID-vCOUNTER),vVERSION);

vROW_ID := vROW_ID + 1;

--insert MFN_ZIP_CONTRIBUTION
INSERT INTO LOG_MODEL_CONFIG (ROW_ID,MODEL_ID,STEP_CODE,STEP_TYPE,CREATED_AT,UPDATED_AT,STATUS,LINKEDMODEL,RUN_ID,C_VERSION) VALUES
(vROW_ID,model_id,'ZIPCODE MFN CONTRIBUTION','CONFIGURATION_DATA',SYSDATE,SYSDATE,'Completed',vLINKEDMODEL,CONCAT(TO_CHAR(SYSDATE,'YYYYMMDDHHMMSS'),vROW_ID-vCOUNTER),vVERSION);

vROW_ID := vROW_ID + 1;

--insert STATION_PERFORMANCE
INSERT INTO LOG_MODEL_CONFIG (ROW_ID,MODEL_ID,STEP_CODE,STEP_TYPE,CREATED_AT,UPDATED_AT,STATUS,LINKEDMODEL,RUN_ID,C_VERSION) VALUES
(vROW_ID,model_id,'STATION PERFORMANCE','CONFIGURATION_DATA',SYSDATE,SYSDATE,'Completed',vLINKEDMODEL,CONCAT(TO_CHAR(SYSDATE,'YYYYMMDDHHMMSS'),vROW_ID-vCOUNTER),vVERSION);

vROW_ID := vROW_ID + 1;

--insert ESMM_ROUTES
INSERT INTO LOG_MODEL_CONFIG (ROW_ID,MODEL_ID,STEP_CODE,STEP_TYPE,CREATED_AT,UPDATED_AT,STATUS,LINKEDMODEL,RUN_ID,C_VERSION) VALUES
(vROW_ID,model_id,'ESMM ROUTES DATA','CONFIGURATION_DATA',SYSDATE,SYSDATE,'Completed',vLINKEDMODEL,CONCAT(TO_CHAR(SYSDATE,'YYYYMMDDHHMMSS'),vROW_ID-vCOUNTER),vSYSCONFIG);

vROW_ID := vROW_ID + 1;

--insert STN_ZIP_MAPPING
INSERT INTO LOG_MODEL_CONFIG (ROW_ID,MODEL_ID,STEP_CODE,STEP_TYPE,CREATED_AT,UPDATED_AT,STATUS,LINKEDMODEL,RUN_ID,C_VERSION) VALUES
(vROW_ID,model_id,'STATION ZIPCODE MAPPING (LARGE/SMALL)','CONFIGURATION_DATA',SYSDATE,SYSDATE,'Completed',vLINKEDMODEL,CONCAT(TO_CHAR(SYSDATE,'YYYYMMDDHHMMSS'),vROW_ID-vCOUNTER),vVERSION);

vROW_ID := vROW_ID + 1;

--insert ZIPCODE_LS_CONTRIBUTION
INSERT INTO LOG_MODEL_CONFIG (ROW_ID,MODEL_ID,STEP_CODE,STEP_TYPE,CREATED_AT,UPDATED_AT,STATUS,LINKEDMODEL,RUN_ID,C_VERSION) VALUES
(vROW_ID,model_id,'ZIPCODE LARGE/SMALL CONTRIBUTION','CONFIGURATION_DATA',SYSDATE,SYSDATE,'Completed',vLINKEDMODEL,CONCAT(TO_CHAR(SYSDATE,'YYYYMMDDHHMMSS'),vROW_ID-vCOUNTER),vVERSION);

COMMIT;

END;